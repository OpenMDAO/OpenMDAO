name: Update status of associated POEM

on:
  pull_request_target:
    types:
      - closed

jobs:

  check_for_poem:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Display run details
        run: |
          echo "============================================================="
          echo "Run #${GITHUB_RUN_NUMBER}"
          echo "Run ID: ${GITHUB_RUN_ID}"
          echo "Repository:   ${GITHUB_REPOSITORY}"
          echo "Triggered by: ${GITHUB_EVENT_NAME}"
          echo "Initiated by: ${GITHUB_ACTOR}"
          echo "============================================================="

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"

      - name: Dump GitHub pull request context
        env:
          GITHUB_CONTEXT: ${{ toJson(github.event.pull_request) }}
        run: |
          echo "$GITHUB_CONTEXT"


      - name: Check for Associated POEM
        id: check_poem
        env:
          BODY: ${{ github.event.pull_request.body }}
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "PULL REQUEST:"
          echo $BODY

          echo "----------------------"

          while IFS= read -r line; do
            ISSUE_ID=$(echo $line | grep "Resolves #" -)
            if [[ "$ISSUE_ID" ]]; then
              ISSUE_ID=$(echo $ISSUE_ID | cut -d '#' -f 2)
              break
            fi
          done <<< "$BODY"

          ISSUE_ID=$(echo $ISSUE_ID|tr -d '\n\t\r ')

          echo "ISSUE ID: $ISSUE_ID"

          echo "----------------------"

          ISSUE_TEXT=`gh --repo OpenMDAO/OpenMDAO issue view $ISSUE_ID`

          ASSOCIATED_POEM=""
          POEM_ID=""

          echo "ISSUE:"

          while IFS= read -r line; do
            echo $line
            if [[ "$ASSOCIATED_POEM" ]]; then
              POEM_ID=$(echo $line)
              if [[ "$POEM_ID" ]]; then
                break
              fi
            else
              ASSOCIATED_POEM=$(echo $line | grep "Associated POEM" -)
            fi
          done <<< "$ISSUE_TEXT"

          echo "----------------------"

          POEM_ID=$(echo $POEM_ID | tr -d '\n\t\r ')

          echo "POEM ID: $POEM_ID"

          echo "----------------------"

          echo "POEM_ID=$POEM_ID" >> $GITHUB_OUTPUT

          echo "${{  github.event.pull_request.merged }}"
          if [[ "${{  github.event.pull_request.merged }}" == "true" ]]; then
            echo "pull request merged, should trigger POEM update"
          fi

      - name: Update POEM status
        if: github.event.pull_request.merged == 'true' && steps.update_poem.outputs.POEM_ID != ''
        uses: benc-uk/workflow-dispatch@v1
        with:
          repo: ${{ github.repository_owner }}/POEMs
          workflow: Update POEM status to Integrated
          inputs: '{ "poem_integrated": "${{ steps.update_poem.outputs.POEM_ID }}" }'
          token: ${{ secrets.ACCESS_TOKEN }}
