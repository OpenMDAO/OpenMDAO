name: OpenMDAO Docs

on:
  # Trigger on push or pull request events for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Trigger on release, to publish release versioned docs to openmdao.org
  release:
    types: [published]

  # Allow running the workflow manually from the Actions tab
  # All jobs are included by default and may be deselected if desired
  workflow_dispatch:

    inputs:

      run_name:
        type: string
        description: 'Name of workflow run as it will appear under Actions tab:'
        required: false
        default: ""

      Ubuntu_Baseline:
        type: boolean
        description: 'Include Ubuntu Baseline in test matrix'
        required: false
        default: true

      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

      use_pypi:
        type: boolean
        description: 'Run tests against the published PyPi version of OpenMDAO'
        required: false
        default: false

concurrency:
  # Cancel any existing CI runs if we push to this branch
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

run-name:  ${{ inputs.run_name }}

permissions: {}

jobs:

  tests:

    timeout-minutes: 120

    strategy:
      fail-fast: false
      matrix:
        include:
          # test baseline versions on Ubuntu
          - NAME: Ubuntu Baseline
            OS: ubuntu-24.04
            PY: '3.12'
            NUMPY: '2.2'
            SCIPY: '1.16'
            PETSc: '3.21'
            PYOPTSPARSE: '2.13.1'
            PYOPTSPARSE_FROM: 'build_pyoptsparse'
            OPTIONAL: '[all,numba]'
            PEP517: true
            PUBLISH: true

    runs-on: ${{ matrix.OS }}

    name: ${{ matrix.NAME }}

    defaults:
      run:
        # Note this isn't passed to the composite action setup_openmdao_ci
        shell: bash -l {0}

    steps:

      - name: Checkout code
        uses: actions/checkout@v5

      - name: 'Setup OpenMDAO CI'
        id: setup_openmdao_ci
        uses: ./.github/actions/setup_openmdao_ci
        with:
          matrix_name: ${{ matrix.NAME }}
          os_version: ${{ matrix.OS }}
          python_version: ${{ matrix.PY }}
          numpy_version: ${{ matrix.NUMPY }}
          scipy_version: ${{ matrix.SCIPY }}
          use_pypi: ${{ inputs.use_pypi }}
          pep517: ${{ matrix.PEP517 }}
          optional: ${{ matrix.OPTIONAL }}

      - name: 'Install pyOptSparse'
        id: install_pyoptsparse
        uses: ./.github/actions/install_pyoptsparse
        with:
          pyoptsparse_version: ${{ matrix.PYOPTSPARSE }}
          pyoptsparse_from: ${{ matrix.PYOPTSPARSE_FROM }}
          snopt_version: ${{ matrix.SNOPT }}
          SECRET_ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY}}
          SECRET_ssh_known_hosts: ${{ secrets.SSH_KNOWN_HOSTS}}
          SECRET_snopt_location: ${{ secrets.SNOPT_LOCATION }}
          SECRET_snopt_location_72: ${{ secrets.SNOPT_LOCATION_72 }}
          SECRET_snopt_location_77: ${{ secrets.SNOPT_LOCATION_77 }}

      - name: 'Install PETSc and mpi4py'
        id: install_petsc
        uses: ./.github/actions/install_petsc
        with:
          openmpi_version: ${{ matrix.OPENMPI }}
          petsc_version: ${{ matrix.PETSc }}
          mpi4py_version: ${{ matrix.MPI4PY }}

      - name: 'Install optional dependencies'
        id: install_optional_dependendies
        uses: ./.github/actions/install_optional_dependencies
        with:
          os_version: ${{ matrix.OS }}
          optional: ${{ matrix.OPTIONAL }}

      - name: 'Display environment info'
        id: display_env_info
        uses: ./.github/actions/display_environment_info
        with:
          matrix_name: ${{ matrix.NAME }}
          SECRET_slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          python_version: ${{ matrix.PY }}
          numpy_version: ${{ matrix.NUMPY }}
          scipy_version: ${{ matrix.SCIPY }}

      - name: 'Build and Optionally Publish Docs'
        id: build_docs
        uses: ./.github/actions/build_docs
        with:
          matrix_name: ${{ matrix.NAME }}
          use_snopt: ${{ format('{0}', matrix.SNOPT_LOCATION_72 != '' || matrix.SNOPT_LOCATION_77 != '') }}
          SECRET_docs_location: ${{ secrets.DOCS_LOCATION }}
          SECRET_slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          publish: ${{ matrix.PUBLISH }}
